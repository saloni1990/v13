

#landing-header{
     /*Set z-index to 1 so all of the elements inside the landing-header div will be in front of the background images*/
     z-index: 1;
     /*The position is set to relative so we can use the z-index property; the default position value is static, which ignores z-index*/
     position: relative;
     /*Center the text and button*/
     text-align-last: center;
     /*We use padding-top to vertically center our div, since it's contents take up quite a bit of space we use 40vh (view height) instead of 50, this way the content looks more visually centered*/
     /*vh	Relative to 1% of the height of the viewport* Viewport = the browser window size. If the viewport is 50cm wide, 1vw = 0.5cm.*/
     padding-top: 30vh;
    color: #fff;
}

.bg {
	background:linear-gradient( rgba(0, 0, 0, 0.2) 100%, rgba(0, 0, 0, 0.2)100%),url("https://s3.eu-west-2.amazonaws.com/sallearnstocode.images/SaloniandTom-493.jpg");
	height: 100%;
	width:100;
	background-position: center;
	background-repeat: no-repeat;
	background-size: cover;
	padding-top: 0px;
	color: #fff;
}
#landing-header h1 {
  /* offset-x | offset-y | blur-radius | color */
	text-shadow: 0px 4px 3px rgba(0,0,0,0.4),
				 0px 8px 13px rgba(0,0,0,0.1),
				 0px 18px 23px rgba(0,0,0,0.1);
}

#landing-header h3 a {
  color: #fff;
}

/*This will fix the ul to the window, positioning it in the top left corner and filling the entire screen by setting width and height to 100%; 
we set the z-index to 0 to keep the background images behind the rest of the page's content; list-style is set to none in order to hide the bullet points from the list's default styling; 
margin and padding are removed entirely*/
/* .slideshow { 
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 0;
  list-style: none;
  margin: 0;
  padding: 0;
  display:relative
} */

/*Notice the animation property at the bottom of this rule, this is how we add an animation to an element; 
in this case we have an animation named imageAnimation that lasts for 50s (seconds), keeps linear timing	(the whole animation runs at the same speed), 
and loops an infinite number of times*/

.slideshow li { 
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  background-size: cover;
  /*This will center images perfectly*/
  background-position: 50% 50%;
  /*background:linear-gradient( rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2));*/
  background-repeat: no-repeat;
  opacity: 0;
  z-index: 0;
  /* animation: imageAnimation 50s linear infinite;  */
}

/*Each list item needs a background-image and the last four need an animation-delay (this way they all fire off one after the other in ten second intervals):*/
.slideshow li:nth-child(1) { 
  background-image: url(https://images.pexels.com/photos/402028/pexels-photo-402028.jpeg) 
}
.slideshow li:nth-child(2) { 
  background-image: url(https://images.pexels.com/photos/347145/pexels-photo-347145.jpeg);
  animation-delay: 10s; 
}
.slideshow li:nth-child(3) { 
  background-image: url(https://images.pexels.com/photos/1108701/pexels-photo-1108701.jpeg);
  animation-delay: 20s; 
}
.slideshow li:nth-child(4) { 
  background-image: url(https://images.pexels.com/photos/1310788/pexels-photo-1310788.jpeg);
  animation-delay: 30s; 
}
.slideshow li:nth-child(5) { 
  background-image: url(https://images.pexels.com/photos/590478/pexels-photo-590478.jpeg);
  animation-delay: 40s; 
}

/*Now we can create the keyframes for the animation*/
@keyframes imageAnimation { 
  0% { 
    opacity: 0; 
    animation-timing-function: ease-out;
  }
  10% {
    opacity: 1;
    animation-timing-function: ease-in;
  }
  20% {
    opacity: 1
  }
  30% {
    opacity: 0
  }
}

/*The animation will be named imageAnimation, which matches with the value from our animation property in the .slideshow (unordered list) rule
From 0% to 10% (the beginning of our animation) the list item begins changing it's opacity from 0 to 1 (invisible to visible)
the animation-timing-function is set to ease-in at 0% and ease-out and 10%, this makes for a more smooth fade-in (read more about this here)
the list item's opacity then stays at 1 until it reaches 20% at which point it fades back out, reaching 0 at 30% and staying at 0 for the remainder of the animation
/*If we have 5 background images visible for 5 seconds each, then the time it takes to fade the image in and keep it visible is 10 seconds with a 5 second crossfade/fadeout into the next image; The entire animation cycle for all 5 images takes 50 seconds total
100% divided by 5 is 20% so each image's fadein and visibility should last 20% of the cycle; half of 20% is 10%, that is why our fade in is from 0% to 10%, then we keep it visible until 20% is reached and begin the fadeout from 20% to 30%, the 5 second fadeout overlaps the next image's 5 second fadein, which is what creates the crossfade effect*/

/* Older browser support - .no-cssanimations class added by modernizr */
.no-cssanimations .slideshow li {
	opacity: 1;
}